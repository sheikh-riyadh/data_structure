#include <bits/stdc++.h>
using namespace std;
int main()
{
    /* 
    যখন কোন একটি N তম লুপের মধ্যে আরও একটি N তম লুপ চলে তখন সেটাকে O(N*N) complexity বলে থাকে
    যাকে আমরা nested loop নামে বলে থাকি যখন কোন একটি লুপের পেটের মধ্যে আরও একটি লুপ চলে তখন ২টি লুপকে
    গুণ করতে হয় এবং এই O(N*N) complexity N এর মান highest 10^3 হবে যদি আমাদের N এর মান 10^3 == 1,000 না
    হয় এবং আমরা যদি সেখানে O(N*N) লুপ চালাতে থাকি তাহলে আমরা time limit exit error খেয়ে যাবো এর জন্য যখন কোন
    O(N*N) complexity লুপ চালাব N এর নাম অবশ্যয় 10^3 মধ্যে হতে হবে ।
    
    আমরা কিছু উদাহারন এর মধ্যে বোঝার চেষ্টা করবো ।



    উদাহারন ১ঃ
    ==========
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
        
        }
    } 
    
    যেহেতু এইখানে N তম লুপের মধ্যে আরও একটি N তম লুপ চলছে এর জন্য এটার complexity হবে O(n*n);




    উদাহারন ২ঃ
    ==========
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
        
        }
    } 
    
    এইটার complexity কি হবে? আমরা জানি যখন কোন একটি লুপের পেটের মধ্যে আরও একটি লুপ চলে সেটা গুণ হয়ে যাই 
    যেমন আমাদের ২য় লুপের দেখতে পাচ্ছি N তম লুপের পেটের মধ্যে আরও একটি M তম লুপ চলছে তাহলে আমরা বলতে পারি এইটার
    complexity হচ্ছে O(n*m)
    
    
     */
    return 0;
}